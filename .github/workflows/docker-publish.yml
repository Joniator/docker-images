name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_dispatch:
  schedule:
    - cron: '45 10 * * *'
  push:
    branches: [ code-server ]
  pull_request:
    branches: [ code-server ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY_GHCR: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: joniator/code-server
  DESCRIPTION: <DESCRIPTION>

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against ghcr
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY_GHCR }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY_GHCR }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Login against docker hub
      # https://github.com/docker/login-action
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build Docker image with Buildx 
      # https://github.com/docker/build-push-action
      - name: Build Docker image
        id: build
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          load: true
          tags: localimage:test

      # Get latest version from https://pkgs.alpinelinux.org/
      - name: Get latest version
        id: get_version
        run: |
          sh .github/workflows/get_version.sh

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: |
            ${{ env.REGISTRY_GHCR }}/${{ env.IMAGE_NAME }}
            ${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{raw}},value=${{ steps.get_version.outputs.version }}
          labels: |
            org.opencontainers.image.description=${{ env.DESCRIPTION }}

      # Build Docker image with Buildx 
      # https://github.com/docker/build-push-action
      - name: Push Docker image
        id: push
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
